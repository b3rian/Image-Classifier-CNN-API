name: Create & Push Docker Image to Docker Hub and Deploy API to Hugging Face

on:
  workflow_dispatch:

env:
  DOCKER_IMAGE_BASE: b3rian/image-classifier-fastapi-streamlit
  BRANCH_NAME: deploy-api

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the deploy-api branch code
    - name: Checkout deploy-api branch
      uses: actions/checkout@v4
      with:
        ref: ${{ env.BRANCH_NAME }}

    # Step 2: Set up Python
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12

    # Step 3: Install Python dependencies
    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install huggingface_hub

    # Step 4: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Step 5: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Step 6: Define image tags using commit SHA and date
    - name: Define Docker tags
      id: meta
      run: |
        SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
        DATE=$(date +%F)
        echo "TAG=${SHORT_SHA}-${DATE}" >> $GITHUB_OUTPUT
        echo "FULL_TAG=${{ env.DOCKER_IMAGE_BASE }}:${SHORT_SHA}-${DATE}" >> $GITHUB_OUTPUT
        echo "LATEST_TAG=${{ env.DOCKER_IMAGE_BASE }}:latest" >> $GITHUB_OUTPUT

    # Step 7: Build and push Docker images
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ steps.meta.outputs.FULL_TAG }}
          ${{ steps.meta.outputs.LATEST_TAG }}

    # Step 8: Deploy to Hugging Face
    - name: Deploy to Hugging Face Spaces
      env:
        HF_TOKEN: ${{ secrets.HF_TOKEN }}
      run: |
        echo "$HF_TOKEN" | huggingface-cli login --token
        python deploy.py